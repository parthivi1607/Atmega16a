/*
 * TWISlaveGame.c
 *
 * Created: 2/24/2019 5:23:39 PM
 * Author : DELL
 */ 

#include <avr/io.h>
#include <util/delay.h>

int i,flag=0;
int lastButton=0;
int currentButton=0;

void blink(int x)
{
	int i=0;
	while(i<x)
	{
		PORTB ^= 1<<PINB0;
		_delay_ms(500);
		PORTB ^= 1<<PINB0;
		_delay_ms(500);
		i++;
	}
}

int debounce(int last)
{
	int current = ((PIND & (1<<PIND7))>>PIND7);
	if(current != last)
	{
		_delay_ms(5);
		current = ((PIND & (1<<PIND7))>>PIND7);
	}
	return current;
}

void TWI_Init()
{
	TWCR = 1<<TWEN;
	TWAR = 0b11000000;
	TWCR=(1<<TWINT)|(1<<TWEN)|(1<<TWEA);
}

void TWI_write_data(unsigned char data)
{
	if(data==0b00001111)
	{
		blink(3);
	}
	TWDR=data;
	TWCR = (1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag
	//TWDR=data;
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte transmitted
	//while((TWSR & 0xF8) != 0x28); // Check for the acknowledgement
}

void button()
{
	currentButton = debounce(lastButton);
	if(currentButton==0 && lastButton==1)
	{
		slave();
		master(0b00001111);
	}
	else
	{
		slave();
		master(0b11111111);
	}
	lastButton=currentButton;
}

void TWI_read_address(void) 
{
	//TWCR = (1<<TWEA)|(1<<TWINT)|(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));  // Wait for TWINT flag
	//while((TWSR & 0xF8)!=0x60);
}

void TWI_read_data(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));    // Wait for TWINT flag
	//while((TWSR & 0xF8)!=0x80);        // Wait for acknowledgement
	uint8_t data=TWDR;                    // Get value from TWDR
	if(data==0b11110000)
	{
		blink(2);
	}
}

void master(int val)
{
	TWI_Init();
	TWI_read_address();
	TWI_write_data(val);
}

void slave()
{
	TWI_Init();
	TWI_read_address();
	TWI_read_data();
}

int main(void)
{
	DDRB |= 1<<PINB0;
	PORTB &= ~(1<<PINB0);
	DDRB |= 1<<PINB1;
	PORTB &= ~(1<<PINB1);
	DDRD &= ~(1<<PIND7); //switch input
	PORTD |= 1 << PIND7; //set to high
	
	while (1)
	{
		button();
	}
}